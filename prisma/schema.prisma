// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")  // ใช้ ENV สำหรับ URI ของ MongoDB
}

// User model
model User {
  id       String    @id @default(cuid()) @map("_id") // Maps to MongoDB _id
  name     String
  email    String    @unique
  password String?   // Password can be optional or null
  posts    Post[]    @relation("UserPosts") // One User can have many Posts
  comments Comment[] @relation("UserComments") // One User can have many Comments
  reports  Report[]  @relation("UserReports") // One User can report many Posts
}

// Post model
model Post {
  id        String     @id @default(cuid()) @map("_id") // MongoDB _id
  title     String
  content   String
  userId    String
  user      User       @relation(fields: [userId], references: [id], name: "UserPosts")
  images    String[]
  createdAt DateTime   @default(now()) // ต้องมีค่า
  updatedAt DateTime   @updatedAt
  comments  Comment[]  @relation("PostComments") // ความเห็นที่เกี่ยวข้องกับโพสต์นี้
  reports   Report[]   @relation("PostReports") // รายงานที่เกี่ยวข้องกับโพสต์นี้
}

// Comment model
model Comment {
  id        String   @id @default(cuid()) @map("_id") // MongoDB _id
  content   String   // Content of the comment
  postId    String   // ID of the post this comment belongs to
  post      Post     @relation(fields: [postId], references: [id], name: "PostComments") // Link to Post
  userId    String   // ID of the user who made the comment
  user      User     @relation(fields: [userId], references: [id], name: "UserComments") // Link to User
  createdAt DateTime @default(now()) // Creation date of the comment
  images    String[] // Multiple image URLs related to the comment
}

model Report {
  id        String   @id @default(cuid()) @map("_id") // MongoDB _id
  reason    String   // Reason for the report
  userId    String   // ID of the user who reports
  postId    String   // ID of the post being reported
  createdAt DateTime @default(now()) // Creation date of the report

  user      User     @relation(fields: [userId], references: [id], name: "UserReports") // Link to User
  post      Post     @relation(fields: [postId], references: [id], name: "PostReports") // Link to Post
}